@using System.ComponentModel.DataAnnotations

<label class="d-flex mt-4 w-100 lead">
    <input 
        placeholder="Zoeken / toevoegen"
        type="search" 
        class="flex-grow-1 form-control"

        @onkeypress="OnEnterPressed"

        @onfocusout="DelayedToggleLeave"
        @onfocusin="OnFocusIn"

        @bind:get="SearchValue"
        @bind:set="InvokeOnSearch"
        @bind:event="oninput"
>

    @if (SearchValue != "")
    {
        <button type="button" class="d-inline-flex btn btn-danger" @onclick="OnClearButtonClicked">
            X
        </button>

        <button type="submit" class="btn btn-success" @onclick="OnSubmit">
            @ChildContent
        </button>
    }
</label>


@code {
    [Parameter]
    public required string SearchValue { get; set; }

    [Parameter]
    public required EventCallback<string> SearchValueChanged { get; set; }

    [Parameter]
    public required RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [Parameter]
    public EventCallback OnFocusIn { get; set; }

    [Parameter]
    public EventCallback OnFocusOut { get; set; }

    async Task DelayedToggleLeave()
    {
        await Task.Delay(1000);
        await OnFocusOut.InvokeAsync();
    }

    async Task OnClearButtonClicked()
    {
        SearchValue = "";
        await SearchValueChanged.InvokeAsync(SearchValue);
    }

    async Task InvokeOnSearch(string input)
    {
        SearchValue = input;
        await SearchValueChanged.InvokeAsync(SearchValue);
    }

    async Task OnEnterPressed(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await OnSubmit.InvokeAsync();
        }
    }
}
