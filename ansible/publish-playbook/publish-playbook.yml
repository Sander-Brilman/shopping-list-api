
- name: create {{ APP_USER }} user
  tags: create_user
  hosts: all
  become: true
  vars_files:
    - ./variables.yml
  tasks:
    - name: "create {{ APP_USER }} group"
      group:
        name: "{{ APP_USER }}"
        state: present

    - name: create {{ APP_USER }} user 
      user:
        name: "{{ APP_USER }}"
        comment: user for running the shoppinglist api docker compose
        create_home: yes # we will place the app here!
        groups: "{{ APP_USER }},docker"
        state: present
        shell: /usr/sbin/nologin
        password: '!'

    - name: set permissions of app home
      file: 
        path: "/home/{{ APP_USER }}/"
        state: directory
        owner: "{{ APP_USER }}"
        group: restic
        mode: '0650'      


- name: build the docker container
  tags: build_container
  hosts: localhost
  tasks:
    - name: remove existing .tar
      file:
        path: ../shopping-list-api-container.tar
        state: absent

    - name: build docker image
      command: docker compose build
      args:
        chdir: ../../

    - name: Save Docker image to tarball
      command: docker save shopping-list-api:latest -o shopping-list-api-container.tar
      args:
        chdir: ../../


- name: Install and run app on remote server
  tags: run_container
  hosts: all
  become: true
  vars_files:
  - ./variables.yml
  tasks:
    - name: Create postgres-data directory
      file: 
        path: "/home/{{ APP_USER }}/postgres-data"
        state: directory
        owner: "{{ APP_USER }}"
        group: "{{ APP_USER }}"
        mode: '0644'

    - name: Create postgres-backups directory
      file: 
        path: "/home/{{ APP_USER }}/postgres-backups"
        state: directory
        owner: "{{ APP_USER }}"
        group: restic
        mode: '0654'

    - name: Copy Docker files
      copy:
        src: "../../{{ item.src }}"
        dest: "/home/{{ APP_USER }}/{{ item.dest }}"
        owner: "{{ APP_USER }}"
        group: restic
        mode: '0644'
        force: true
      loop:
        - { src: shopping-list-api-container.tar, dest: shopping-list-api-container.tar }
        - { src: docker-compose.yml, dest: docker-compose.yml }
        - { src: .env.production, dest: .env }


    # 
    # This is a hack that # dynamically adds the "user: XXX:XXX" statement to the compose to run the project as the dedicated {{ APP_USER }} user
    # this is done to improve isolation between running apps 
    #
    - name: Get UID of "{{ APP_USER }}"
      command: id -u "{{ APP_USER }}"
      register: user_id_result

    - name: Get GID of "{{ APP_USER }}"
      command: id -g "{{ APP_USER }}"
      register: group_id_result

    - name: Inject user directive into docker-compose.yml
      replace:
        path: "/home/{{ APP_USER }}/docker-compose.yml"
        regexp: "image: shopping-list-api:latest"
        replace: 'user: "{{ user_id_result.stdout }}:{{ group_id_result.stdout }}"\n    image: shopping-list-api:latest'



    - name: Stop running containers
      command: sudo docker compose down 
      args:
        chdir: "/home/{{ APP_USER }}/"

    - name: Load image into Docker
      command: docker load -i ./shopping-list-api-container.tar
      args:
        chdir: "/home/{{ APP_USER }}/"

    - name: Start container
      command: sudo docker-compose up -d 
      args:
        chdir: "/home/{{ APP_USER }}/"


- name: setup caddy reverse proxy
  tags: caddy
  hosts: all
  become: true
  vars_files:
    - ./variables.yml
  tasks:
    - name: setup reverse proxy config file
      template:
        src: ./shopping-list-api.caddyfile.j2
        dest: /etc/caddy/sites/shopping-list-api
        owner: caddy
        group: restic
        mode: 0644

    - name: restart Caddy service
      command: sudo caddy reload --config /etc/caddy/Caddyfile



- name: configure backup paths
  tags: configure_backup
  hosts: all
  become: true
  vars_files:
    - ./variables.yml
  tasks:
    - name: copy backup locations file
      template:
        src: ./shopping-list-api-backup-locations.txt.j2
        dest: /home/restic/backup-locations/shopping-list-api.txt
        owner: restic
        group: restic
