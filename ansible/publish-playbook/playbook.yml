
- name: "create {{ APP_USER }} user"
  tags: create_user
  hosts: all
  become: true
  vars_files:
    - ./variables.yml
  tasks:
    - name: "create {{ APP_USER }} group"
      group:
        name: "{{ APP_USER }}"
        state: present

    - name: create {{ APP_USER }} user 
      user:
        name: "{{ APP_USER }}"
        comment: user for running the shoppinglist application inside the container
        groups: "{{ APP_USER }}"
        shell: /usr/sbin/nologin
        password: '!'

    - name: set permissions of app home
      file: 
        path: "/home/{{ APP_USER }}/"
        state: directory
        owner: "{{ APP_USER }}"
        group: restic
        mode: u=rx,g=rx,o=


    - name: "Get user id of {{ APP_USER }}"
      command: "id -u {{ APP_USER }}"
      register: USER_ID
      changed_when: false
    
    - set_fact:
        USER_ID: "{{ USER_ID.stdout }}"

    - name: "Get group id of {{ APP_USER }}"
      command: "id -g {{ APP_USER }}"
      register: USER_GROUP_ID
      changed_when: false

    - set_fact:
       USER_GROUP_ID: "{{ USER_GROUP_ID.stdout }}"


- name: setup docker compose 
  tags: run_container
  hosts: all
  become: true
  vars_files:
  - ./variables.yml
  tasks:
    - name: template files
      template:
        src: "{{ item.src }}"
        dest: "/home/{{ APP_USER }}/{{ item.dest }}"
        owner: "{{ APP_USER }}"
        group: restic
        mode: u=r,g=r,o=
        force: true
      loop:
          - { src: docker-compose.yml.j2, dest: docker-compose.yml }
          - { src: postgres-password.txt.j2, dest: postgres-password.txt }

    - name: setting permissions of data directory
      file:
        path: "{{ POSTGRES_DATA_LOCATION }}"
        state: directory
        owner: "{{ APP_USER }}" # postgres user from the postgres backup image
        group: "{{ APP_USER }}"
        mode: u=rwx,g=rwx,o=

    - name: setting permissions of backup directory
      file:
        path: "{{ POSTGRES_BACKUP_LOCATION }}"
        state: directory
        owner: "{{ APP_USER }}" # postgres user from the postgres backup image
        group: restic
        mode: u=rwx,g=rx,o=

    - name: Stop running containers
      command: docker compose down 
      args:
        chdir: "/home/{{ APP_USER }}/"

    - name: Start container
      command: docker-compose up -d 
      args:
        chdir: "/home/{{ APP_USER }}/"


- name: setup caddy reverse proxy
  tags: caddy
  hosts: all
  become: true
  vars_files:
    - ./variables.yml
  tasks:
    - name: template reverse proxy caddy file
      template:
        src: caddyfile.j2
        dest: "/etc/caddy/sites/{{ APP_USER }}.caddyfile"
        owner: caddy
        group: restic
        mode: u=r,g=r,o=

    - name: restart Caddy service
      command: sudo caddy reload --config /etc/caddy/Caddyfile



- name: configure backup paths
  tags: configure_backup
  hosts: all
  become: true
  vars_files:
    - ./variables.yml
  tasks:
    - name: template backup locations file
      template:
        src: backup-locations.j2
        dest: "/etc/restic/{{ APP_USER }}"
        owner: restic
        group: restic
        mode: u=r,g=,o=

